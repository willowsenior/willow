extends layout

block content

  .row.pb-2.m-t-40.mb-4.border-bottom
    .col-xs-12.col-md-12.col-lg-6.text-left
      h1 Senior Room Profile
    .col-lg-6.hidden-sm.text-right
      .step-form-breadcrumbs.text-right
        span.step
        span.step
        span.step
        span.step
        span.step
  form.body-form.body-form__centered(id='seniorcreate-form', method='POST', action='/createseniorrecord', novalidate)
    input(type='hidden', name='_csrf', value=_csrf)

    .step-form-tab
        .form-section
            .form-group.form-section-header.form-section-header--center
                h3.text-center Timeframe
            .form-group.row
                label.col-lg-8.col-md-8.col-form-label I am looking for placement in
                .col-md-4
                    .col-md-12
                        label.form-radio-label.ml-4(for='placement_1month') Less than 1 month
                            input.form-radio-input(type='radio', name='placement', id='placement_1month' value = 1)
                            span.radio
                    .col-md-12
                        label.form-radio-label.ml-4(for='placement_1to3months') 1-3 months
                            input.form-radio-input(type='radio', name='placement', id='placement_1to3months' value = 2)
                            span.radio
                    .col-md-12
                        label.form-radio-label.ml-4(for='placement_morethan3months') More than 3 months
                            input.form-radio-input(type='radio', name='placement', id='placement_morethan3months' value = 3)
                            span.radio
    .step-form-tab
        .form-section
            .form-group.form-section-header.form-section-header--center
                h3.text-center Contact Info
            .form-group.row
                label.col-form-label.col-form-label__stacked Contact Name
                    .col-md-10
                        input.form-control(type='text', name='contactName', id='contactName', placeholder='Contact Name')
            .form-group.row
                label.col-form-label.col-form-label__stacked Contact Email
                    .col-md-10
                        input.form-control(type='email', name='contactEmail', id='contactEmail', placeholder='Email', autofocus, autocomplete='email', required)
            .form-group.row
                label.col-form-label.col-form-label__stacked Contact relationship to the senior
                    .col-md-6
                        input.form-control(type='text', name='contactRelationship', id='contactRelationship', placeholder='Contact Relationship', autofocus, required)
            .form-group.row
                label.col-form-label.col-form-label__stacked Contact relationship to the senior
                    .col-md-6
                        input.form-control(type='text', name='contactRelationship', id='contactRelationship', placeholder='Contact Relationship', autofocus, required)
            .form-group.row
                label.col-form-label.col-form-label__stacked.check-group-label Please check any of the following that apply
                .col-md-12
                    .form-check
                        label.form-check-label(for='power_attorney')= myconstants.constants('Power_attorney')
                            input.form-check-input(type='checkbox', name='power_attorney', id='power_attorney', placeholder='power_attorney' value=1)
                            span.checkmark
                    .form-check
                        label.form-check-label(for='healthcare_proxy')= myconstants.constants('Healthcare_proxy')
                            input.form-check-input(type='checkbox', name='healthcare_proxy', id='healthcare_proxy', placeholder='healthcare_proxy' value=1)
                            span.checkmark
            .form-group.row
                label.col-lg-3.col-md-5.col-form-label I would like the Senior to live with me
                .col-md-4
                    .col-md-12
                        label.form-radio-label.ml-4(for='senior_living_yes') Yes
                        input.form-radio-input(type='radio', name='senior_living', id='senior_living_yes' value = 'Y', checked= currentSenior.Senior_Living==='Y')
                        span.radio
                    .col-md-12
                        label.form-radio-label.ml-4(for='senior_living_no') No
                            input.form-radio-input(type='radio', name='senior_living', id='senior_living_yes' value = 'N', checked= currentSenior.Senior_Living==='N')
                            span.radio
            .form-group.row
                label.col-form-label.col-form-label__stacked.check-group-label By Selecting the Box below, you are agreeing to our Privacy Policy and our Terms and Conditions.
                .col-md-12
                    .form-check
                        label.form-check-label(for='agree_terms') I agree
                            input.form-check-input(type='checkbox', name='agree_terms', id='agree_terms', placeholder='agree_terms' value=1)
                            span.checkmark

        //br 
        //.form-group.offset-sm-1.col-md-6.pl-2
          //button.btn.btn-willow.btn-signup-form(type='submit')
            i.fas.fa-user-plus.fa-sm
            | Signup
    .row.button-row(id="submitRow")
        .col-md-6
          button.btn-subtle(id='prevBtn', onclick='nextPrev(-1)', type='button')
            | Previous
        .col-md-6
          button.btn-secondary(type='submit')
            i.fas.fa-user-plus.fa-sm
            | Signup
    .row.button-row(id="prevNextRow")
      .col-md-6
        button.btn-subtle(id='prevBtn', onclick='nextPrev(-1)', type='button')
          | Previous
      .col-md-6(id="nextContainer")
        button.btn-secondary(id='nextBtn', onclick='nextPrev(1)', type='button')
          | Next
      
      



    script(src='https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js')
    script.
      var currentTab = 0; // Current tab is set to be the first tab (0)
      showTab(currentTab); // Display the current tab

      //Phone Number Parsing
      $(document).ready( function() {
        var phone_input = document.getElementById('contactNumber');
        phone_input.addEventListener('input', function (evt) {
          var number_value = document.getElementById('contactNumber').value,
              final_value;
          if (number_value.length >= 14) return;

          if (number_value.length == 3) {
            //reformat and return phone number
            number_value = number_value.replace(/[^\d]/g, "");
            final_value = number_value.replace(/(\d{3})/, "($1) ");
          } else if (number_value.length == 10) {

            number_value = number_value.replace(/[^\d]/g, "");
            final_value = number_value.replace(/(\d{3})(\d{3})/, "($1) $2-");

          } else if (number_value.length == 14) {
            //reformat and return phone number
            number_value = number_value.replace(/[^\d]/g, "");
            final_value = number_value.replace(/(\d{3})(\d{3})(\d{4})/, "($1) $2-$3");
          } else {
            final_value = number_value
          }

          document.getElementById('contactNumber').value = final_value;
        });
      });

      function showTab(n, direction) {
        // This function will display the specified tab of the form...
          var x = document.getElementsByClassName("step-form-tab");
          x[n].style.display = "block";
        //... and fix the Previous/Next buttons:
        if (n == 0) {
          document.getElementById("prevBtn").style.display = "none";
        } else {
          document.getElementById("prevBtn").style.display = "inline";
        }
        if (n == (x.length - 1)) {
          //Show the submit button
            document.getElementById("prevNextRow").style.display = "none";
            document.getElementById("submitRow").style.display = "flex";
        } else {
          //Don't show the submit row until the end
            document.getElementById("submitRow").style.display = "none";
            document.getElementById("nextBtn").innerHTML = "Next";
        }

        //... and run a function that will display the correct step indicator:
          fixStepIndicator(n, direction);
      }

      function nextPrev(n) {
        // This function will figure out which tab to display
          var x = document.getElementsByClassName("step-form-tab");

        // Exit the function if any field in the current tab is invalid, only for first tab:
          if (n == 1 && currentTab == 0 && !validateForm(currentTab)) return false;

        // Hide the current tab:
          x[currentTab].style.display = "none";

        // Increase or decrease the current tab by 1:
          currentTab = currentTab + n;

        // if you have reached the end of the form...
          if (currentTab >= x.length) {
            return false;
          }

        // Otherwise, display the correct tab:
          showTab(currentTab, n);
      }

      function fixStepIndicator(n, direction) {
        // This function removes the "active" class of all steps...
          var i, 
            x = document.getElementsByClassName("step");

          //... and remove the "complete" class from all future steps in case we went backwards
          if(direction == -1) {
            console.log('for i greater than n remove the complete class', x[previousIndex]);
            x[n].className = x[n].className.replace("complete", "");

            var previousIndex = n + 1;
            x[previousIndex].className = x[previousIndex].className.replace("active", "");
            x[previousIndex].className = x[previousIndex].className.replace("complete", "");
          } else {
            for (i = 0; i < x.length; i++) {
              x[i].className = x[i].className.replace("active", " complete");
            }
          }
          

          

        //... and adds the "active" class on the current step:
          x[n].className += " active";

      }

      //====== Only need to validate step-one for required fields ======//
      function validateForm(currentTab) {
        // This function deals with validation of the form fields
          var x, y, i, valid = true;
          x = document.getElementsByClassName("step-form-tab");
          y = x[currentTab].getElementsByTagName("input");
          var formData = $(y).serializeArray();
          console.log('formData', formData);

        // A loop that checks every input field in the current tab:
          for (i = 0; i < formData.length; i++) {
            // If a field is empty...
            if (formData[i].value == "") {
              // add an "invalid" class to the field:
              y[i].className += " invalid";
              // and set the current valid status to false:
              valid = false;
            }
          }
        // If the valid status is true, mark the step as finished and valid:
          //if (valid) {
            //document.getElementsByClassName("step")[currentTab].className += " finish";
          //}
          return valid; // return the valid status
      }
          
    
